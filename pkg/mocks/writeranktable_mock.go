// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/davebehr1/spanassessment/pkg (interfaces: WriteRankTable)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWriteRankTable is a mock of WriteRankTable interface.
type MockWriteRankTable struct {
	ctrl     *gomock.Controller
	recorder *MockWriteRankTableMockRecorder
}

// MockWriteRankTableMockRecorder is the mock recorder for MockWriteRankTable.
type MockWriteRankTableMockRecorder struct {
	mock *MockWriteRankTable
}

// NewMockWriteRankTable creates a new mock instance.
func NewMockWriteRankTable(ctrl *gomock.Controller) *MockWriteRankTable {
	mock := &MockWriteRankTable{ctrl: ctrl}
	mock.recorder = &MockWriteRankTableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWriteRankTable) EXPECT() *MockWriteRankTableMockRecorder {
	return m.recorder
}

// WriteToFile mocks base method.
func (m *MockWriteRankTable) WriteToFile(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteToFile", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteToFile indicates an expected call of WriteToFile.
func (mr *MockWriteRankTableMockRecorder) WriteToFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteToFile", reflect.TypeOf((*MockWriteRankTable)(nil).WriteToFile), arg0, arg1)
}
