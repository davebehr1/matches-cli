// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/davebehr1/spanassessment/pkg/scanmatches (interfaces: ScanMatches)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	scanmatches "github.com/davebehr1/spanassessment/pkg/scanmatches"
	gomock "github.com/golang/mock/gomock"
)

// MockScanMatches is a mock of ScanMatches interface.
type MockScanMatches struct {
	ctrl     *gomock.Controller
	recorder *MockScanMatchesMockRecorder
}

// MockScanMatchesMockRecorder is the mock recorder for MockScanMatches.
type MockScanMatchesMockRecorder struct {
	mock *MockScanMatches
}

// NewMockScanMatches creates a new mock instance.
func NewMockScanMatches(ctrl *gomock.Controller) *MockScanMatches {
	mock := &MockScanMatches{ctrl: ctrl}
	mock.recorder = &MockScanMatchesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScanMatches) EXPECT() *MockScanMatchesMockRecorder {
	return m.recorder
}

// ScanFromFile mocks base method.
func (m *MockScanMatches) ScanFromFile(arg0 string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ScanFromFile", arg0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ScanFromFile indicates an expected call of ScanFromFile.
func (mr *MockScanMatchesMockRecorder) ScanFromFile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScanFromFile", reflect.TypeOf((*MockScanMatches)(nil).ScanFromFile), arg0)
}

// ScanFromStdin mocks base method.
func (m *MockScanMatches) ScanFromStdin(arg0 scanmatches.StringReader) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ScanFromStdin", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ScanFromStdin indicates an expected call of ScanFromStdin.
func (mr *MockScanMatchesMockRecorder) ScanFromStdin(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScanFromStdin", reflect.TypeOf((*MockScanMatches)(nil).ScanFromStdin), arg0)
}
